---
- name: Configuration du serveur NFS
  hosts: nfs
  tasks:
    - name: Installer les packages nécessaires
      apt:
        name: ["git", "rsync", "nfs-kernel-server", "ca-certificates", "curl"]
        state: present
      become: yes

    - name: Supprimez le répertoire existant
      file:
        path: '/home/mysonet/sprin'
        state: absent

    - name: Cloner le dépôt Git
      git:
        repo: 'https://github.com/CebrailDevOps/sprin.git'
        dest: '/home/mysonet/sprin'
        update: yes

    - name: Créer un dossier
      file:
        path: "/home/mysonet/mysonet-mysql"
        state: directory

    - name: Supprimer le dossier cible
      file:
        path: "/home/mysonet/sprin/mysonet-mysql"
        state: absent

    - name: Supprimer les dossiers cibles s'ils existent
      file:
        path: "/home/mysonet/{{ item }}"
        state: absent
      loop:
        - mysonet-data
        - scripts
        - sshkey
      become: yes

    - name: Déplacer les fichiers clonés
      shell: mv /home/mysonet/sprin/* /home/mysonet/

    - name: Configurer les exports NFS
      blockinfile:
        path: /etc/exports
        block: |
          /home/mysonet/mysonet-mysql "{{ hostvars['sprin1']['ansible_host'] }}"(rw,sync,no_subtree_check) "{{ hostvars['sprin2']['ansible_host'] }}"(rw,sync,no_subtree_check) "{{ hostvars['sprin3']['ansible_host'] }}"(rw,sync,no_subtree_check)
      become: yes

    - name: Rafraîchir les exports et redémarrer NFS
      command:
        cmd: "{{ item }}"
      loop:
        - exportfs -a
        - systemctl restart nfs-kernel-server
      become: yes

    - name: Installer Docker
      shell: curl -sSL https://get.docker.com | sh
      become: yes

    - name: Ajouter l'utilisateur mysonet au groupe docker
      user:
        name: mysonet
        groups: docker
        append: yes
      become: yes

    - name: Installer Docker-compose
      apt:
        name: docker-compose
        state: present
      become: yes

    - name: Redémarrer le serveur
      ansible.builtin.reboot:
      become: yes

    - name: Construire l'image Docker
      docker_image:
        path: /home/mysonet
        name: cebraildevops/mysonet-php
        tag: 1.0
        source: build

    - name: Arrêter les conteneurs
      shell: docker compose down

    - name: Lancer Docker Compose
      docker_compose:
        project_src: /home/mysonet
        state: present

    - name: Supprimer init.sql
      file:
        path: "/home/mysonet/init.sql"
        state: absent

    - name: Transférer le script SQL vers le serveur
      ansible.builtin.copy:
        src: init.sql
        dest: /home/mysonet/init.sql
        mode: '0644'

    - name: Attendre que MySQL soit prêt
      command: sleep 30

    - name: Exécuter le script SQL dans le conteneur MySQL
      shell: docker container exec -i mysonet_db_1 mysql -u root -p'123456a.' < /home/mysonet/init.sql

    - name: Arrêter les conteneurs
      shell: docker compose down

    - name: Changer les permissions du dossier mysonet-mysql
      file:
        path: /home/mysonet/mysonet-mysql
        mode: '0777'
        recurse: yes
      become: yes

    - name: Ajouter une tâche cron pour maintenir les permissions
      cron:
        name: "Maintenir les permissions pour mysonet-mysql"
        minute: "*"
        job: "chmod -R 777 /home/mysonet/mysonet-mysql"
      become: yes